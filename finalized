<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SAT Prep Quiz Game</title>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f0f8ff;
            color: #333;
            text-align: center;
            padding: 50px;
            overflow-x: hidden;
        }

        #welcome-container, #quiz-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        #quiz-container {
            display: none;
        }

        h1 {
            color: #ff4500;
            font-size: 3em;
            margin-bottom: 20px;
            transition: color 0.3s ease;
        }

        h1:hover {
            color: #ff6347;
        }

        p {
            font-size: 1.2em;
        }

        button {
            font-size: 1.2em;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: #32cd32;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #228b22;
        }

        #question-container {
            margin-bottom: 20px;
        }

        #question {
            font-size: 1.5em;
            margin-bottom: 20px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin: 10px 0;
        }

        #feedback {
            margin: 10px 0;
            font-size: 1.2em;
        }

        #score {
            margin-top: 20px;
            font-size: 1.2em;
        }

        #final-score {
            display: none;
            font-size: 2em;
            color: #ff4500;
        }

        #personalized-feedback {
            margin-top: 20px;
            font-size: 1.5em;
        }

        #timer {
            font-size: 1.2em;
            margin-top: 20px;
            color: #ff4500;
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Welcome Container -->
    <div id="welcome-container">
        <h1>Welcome to the SAT Prep Quiz Game!</h1>
        <p>Click the button below to start the quiz.</p>
        <button id="welcome-button">Start Quiz</button>
        <!-- Audio for welcome sound -->
        <audio id="welcome-sound" src="welcome-sound.mp3" preload="auto"></audio>
    </div>

    <!-- Quiz Container -->
    <div id="quiz-container">
        <h1>SAT Prep Quiz Game</h1>
        <div id="timer">Time Left: <span id="timerValue">30</span> seconds</div>
        <div id="question-container">
            <div id="question"></div>
            <ul id="choices"></ul>
        </div>
        <div id="feedback"></div>
        <button id="nextQuestion">Next Question</button>
        <div id="score">
            <p>Score: <span id="scoreValue">0</span></p>
            <p>Question <span id="questionNumber">1</span> of <span id="totalQuestions">20</span></p>
        </div>
        <div id="final-score">
            <p>Your final score is: <span id="finalScoreValue">0</span> out of 20</p>
            <div id="personalized-feedback"></div>
            <button onclick="restartQuiz()">Restart Quiz</button>
        </div>
    </div>

    <script>
        // Initialize variables
        let questions = [];
        let currentQuestionIndex = 0;
        let score = 0;
        const maxQuestions = 20;
        const questionTimer = 30;
        let timer;

        // Play welcome sound when the page loads
        document.getElementById('welcome-sound').play();

        // Function to load questions from JSON file
        async function loadQuestions() {
            try {
                const response = await fetch('questions.json');
                if (!response.ok) {
                    throw new Error('Failed to load questions');
                }
                questions = await response.json();
            } catch (error) {
                console.error('Error loading questions:', error);
            }
        }

        // Function to display the current question and choices
        function displayQuestion() {
            if (currentQuestionIndex >= maxQuestions) {
                endQuiz();
                return;
            }

            const question = questions[currentQuestionIndex];
            document.getElementById('question').innerText = question.question;

            const choicesList = document.getElementById('choices');
            choicesList.innerHTML = '';

            question.choices.forEach(choice => {
                const li = document.createElement('li');
                const button = document.createElement('button');
                button.innerText = choice;
                button.onclick = () => checkAnswer(choice);
                li.appendChild(button);
                choicesList.appendChild(li);
            });

            document.getElementById('questionNumber').innerText = currentQuestionIndex + 1;
            document.getElementById('totalQuestions').innerText = maxQuestions;
        }

        // Function to check if the selected answer is correct
        function checkAnswer(selectedChoice) {
            const question = questions[currentQuestionIndex];
            const feedback = document.getElementById('feedback');

            if (selectedChoice === question.answer) {
                feedback.innerText = 'Correct!';
                score++;
                document.getElementById('scoreValue').innerText = score;
                playSound('correct-answer.mp3');
            } else {
                feedback.innerText = 'Incorrect. Try again!';
                playSound('incorrect-answer.mp3');
            }

            // Move to the next question
            currentQuestionIndex++;
            displayQuestion();
        }

        // Function to play a sound
        function playSound(src) {
            const audio = new Audio(src);
            audio.play();
        }

        // Function to start the quiz timer
        function startTimer() {
            let timeLeft = questionTimer;
            document.getElementById('timerValue').innerText = timeLeft;

            timer = setInterval(() => {
                timeLeft--;
                document.getElementById('timerValue').innerText = timeLeft;

                if (timeLeft <= 0) {
                    clearInterval(timer);
                    endQuiz();
                }
            }, 1000);
        }

        // Function to end the quiz and display the final score
        function endQuiz() {
            clearInterval(timer);
            document.getElementById('quiz-container').style.display = 'none';
            const finalScore = document.getElementById('finalScoreValue');
            finalScore.innerText = score;

            const feedback = document.getElementById('personalized-feedback');
            if (score > 15) {
                feedback.innerHTML = 'Excellent job! ðŸ˜Š';
            } else if (score > 10) {
                feedback.innerHTML = 'Great job! ðŸ™‚';
            } else {
                feedback.innerHTML = 'You can do better! ðŸ˜”';
            }

            document.getElementById('final-score').style.display = 'block';
        }

        // Function to restart the quiz
        function restartQuiz() {
            currentQuestionIndex = 0;
            score = 0;
            document.getElementById('scoreValue').innerText = score;
            document.getElementById('final-score').style.display = 'none';
            document.getElementById('quiz-container').style.display = 'block';
            displayQuestion();
            startTimer();
        }

        // Event listener for the "Start Quiz" button
        document.getElementById('welcome-button').onclick = function() {
            document.getElementById('welcome-container').style.display = 'none';
            document.getElementById('quiz-container').style.display = 'block';
            displayQuestion();
            startTimer();
        };

        // Event listener for the "Next Question" button
        document.getElementById('nextQuestion').onclick = displayQuestion;

        // Load questions when the page loads
        loadQuestions();
    </script>
</body>
</html>
